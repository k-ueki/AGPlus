// Code generated by MockGen. DO NOT EDIT.
// Source: class.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	"reflect"

	"github.com/golang/mock/gomock"
	"github.com/k-ueki/AGPlus/server/domain/entity"
	"github.com/k-ueki/AGPlus/server/domain/query"
)

// MockClassGetRepository is a mock of ClassGetRepository interface.
type MockClassGetRepository struct {
	ctrl     *gomock.Controller
	recorder *MockClassGetRepositoryMockRecorder
}

// MockClassGetRepositoryMockRecorder is the mock recorder for MockClassGetRepository.
type MockClassGetRepositoryMockRecorder struct {
	mock *MockClassGetRepository
}

// NewMockClassGetRepository creates a new mock instance.
func NewMockClassGetRepository(ctrl *gomock.Controller) *MockClassGetRepository {
	mock := &MockClassGetRepository{ctrl: ctrl}
	mock.recorder = &MockClassGetRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClassGetRepository) EXPECT() *MockClassGetRepositoryMockRecorder {
	return m.recorder
}

// FindAll mocks base method.
func (m *MockClassGetRepository) FindAll(query *query.ListPaginationQuery) ([]*entity.Class, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", query)
	ret0, _ := ret[0].([]*entity.Class)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockClassGetRepositoryMockRecorder) FindAll(query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockClassGetRepository)(nil).FindAll), query)
}

// FindByID mocks base method.
func (m *MockClassGetRepository) FindByID(id int) (*entity.Class, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", id)
	ret0, _ := ret[0].(*entity.Class)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockClassGetRepositoryMockRecorder) FindByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockClassGetRepository)(nil).FindByID), id)
}
